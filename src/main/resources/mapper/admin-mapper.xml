<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hapla.admin.model.mapper.AdminMapper">
    <select id="userListCount">
    	select count(*)
    	from users
    	<where>
    	<if test="keyword != null and keyword != ''">
    		and nickname like '%' || #{keyword} || '%'
    	</if>
    	</where>
    </select>
    
    <select id="selectUserList">
    	select user_no, name, nickname, email, create_date, status
    	from users
    	<where>
    	<if test="keyword != null and keyword != ''">
    		and nickname like '%' || #{keyword} || '%'
    	</if>
    	</where>
    	order by 
    <choose>
        <when test="order == 'old'">create_date asc</when>
        <otherwise>create_date desc</otherwise>
    </choose>
    </select>
    
    <select id="totalUsersCount">
    	select count(*) from users 
    </select>
    
    <select id="totalComm">
    	select count(*) from comm
    </select>
    
    <select id="totalReplyCount">
    	select count(*) from reply
    </select>
    
    <select id="totalReview">
    	select count(*) from review
    </select>
    
    <select id="commListCount" resultType="int">
    	select count(*)
    	from comm c
    		join users u on c.user_no = u.user_no
    	<where>
    		c.status = 'Y'
    	<if test="nickname != null and nickname != ''">
    		and u.nickname like '%' || #{nickname} || '%'
    	</if>
    	</where>
    </select>
    
    <select id="replyListCount" resultType = "int">
    	select count(*)
    	from reply r
    		join users u on r.user_no = u.user_no
    	<where>
    		r.status = 'Y'
    	<if test="nickname != null and nickname != ''">
    		and u.nickname like '%' || #{nickname} || '%'
    	</if>
    	</where>
    </select>
    
    <select id="reviewListCount" resultType = "int">
    	select count(*)
    	from review r
    		join users u on r.user_no = u.user_no
    	<where>
    		r.status ='Y'
    	<if test="nickname != null and nickname != ''">
    		and u.nickname like '%' || #{nickname} || '%'
    	</if>
    	</where>
    </select>
    
    <select id="selectComm" resultType = "comm">
    	select c.comm_no as id, c.title, c.views, c.create_date, u.nickname
    	from comm c
    		join users u on c.user_no = u.user_no
    	<where>
    		c.status = 'Y'
    	<if test="nickname != null and nickname != ''">
    		and u.nickname like '%' || #{nickname} || '%'
    	</if>
    	</where>
    	order by 
    <choose>
        <when test="order == 'old'">c.create_date asc</when>
        <otherwise>c.create_date desc</otherwise>
    </choose>
    </select>
    
    <select id="selectReply" resultType="reply">
    select r.reply_no as id, r.reply_content as replyContent, r.create_date, u.nickname, 
           c.title as title, c.comm_no as commNo
    from reply r
        join users u on r.user_no = u.user_no
        join comm c on c.comm_no = r.comm_no
    <where>
    	r.status = 'Y'
    <if test="nickname != null and nickname != ''">
        and u.nickname like '%' || #{nickname} || '%'
    </if>
    </where>
    order by 
    <choose>
        <when test="order == 'old'">r.create_date asc</when>
        <otherwise>r.create_date desc</otherwise>
    </choose>
	</select>
    
     <select id="selectReview" resultType = "review">
    	select r.review_no as id, r.title, r.create_date, r.rating, u.nickname
    	from review r
    		join users u on r.user_no = u.user_no
    	<where>
    		r.status = 'Y'
    	<if test="nickname != null and nickname != ''">
    		and u.nickname like '%' || #{nickname} || '%'
    	</if>
    	</where>
    	order by 
    <choose>
        <when test="order == 'old'">r.create_date asc</when>
        <otherwise>r.create_date desc</otherwise>
    </choose>
    </select>
    
    <delete id="deleteComm">
    	delete from comm where comm_no = #{commNo}
    </delete>
    
    <delete id="deleteReview">
    	delete from review where review_no = #{reviewNo}
    </delete>
    
    <delete id="deleteReply">
    	delete from reply where reply_no = #{replyNo}
    </delete>
    
    <select id="totalWait">
    	select count(*) from report where report_status = 'W'
    </select>
    
    <select id="totalAccept">
    	select count(*) from report where report_status = 'A'
    </select>
    
    <select id="totalReject">
    	select count(*) from report where report_status = 'R'
    </select>
    
    <select id="reportListCount">
    	select count(*) from report
    </select>
    
    <select id="noticeCount">
    	select count(*)
    	from notice
    	where status = 'Y'
    </select>
    
    <select id="selectNoticeList">
    <![CDATA[
    	select *
    	from (select *
    		  from notice
    		  order by is_important desc, create_date desc)
    	where rownum <= #{Row}	  
    	]]>
    </select>
    
    
    <insert id="insertNotice">
    	insert into notice(notice_no,title,content,views,create_date,status,is_important) values(seq_notice.nextval,#{title},#{content},0,#{createDate},default,#{isImportant})
    </insert>

    <select id="selectNotice" resultType = "Notice">
    	select *
    	from notice
    	where notice_no = #{noticeNo} 
    </select>
    
    <update id="updateViews">
    	update notice
    	set views = views + 1
    	where notice_no = #{noticeNo}
    </update>
    
    <update id="updateNotice">
    	update notice
    	set title = #{title}, content = #{content}, 
    		update_date = sysdate, status = #{status}, is_important = #{isImportant}
    	where notice_no = #{noticeNo}
    </update>
    
    <update id="deleteNotice">
    	update notice
    	set status = 'N'
    	where notice_no = #{noticeNo}
    </update>
    
   
    
<!--     <select id="selectReportList" resultType="report"> -->
<!--     	select report_no,report_title ,report_content ,reporter_no,violator_no,report_status,report_category, -->
<!--     		reporter.nickname as reporterNickname, violator.nickname as violatorNickname -->
<!--     	from report r -->
<!--     		join users reporter on r.reporter_no = reporter.user_no -->
<!--     		join users violator on r.violator_no = violator.user_no -->
<!--     	<where> -->
<!--     	<if test="keyword != null and keyword != ''"> -->
<!--     		and reporter.nickname like '%' || #{keyword} || '%' -->
<!--     	</if> -->
<!--     	</where> -->
<!--     		order by -->
<!--     	<choose> -->
<!--     		<when test="order == 'old'">r.create_date asc</when> -->
<!--     		<otherwise>r.create_date desc</otherwise> -->
<!--     	</choose> -->
<!--     </select> -->

 <!-- 신고 목록 조회 - 3회 이상 신고된 항목만 조회-->
   <select id="selectReportList" resultType="report">
       select 
           r.report_no, 
           r.report_title, 
           r.report_content, 
           r.reporter_no, 
           r.violator_no, 
           r.report_status, 
           r.report_category, 
           r.content_no, 
           r.create_date,
           reporter.nickname as reporterNickname, 
           violator.nickname as violatorNickname,
           (select count(*) from report 
            where report_category = r.report_category 
            and content_no = r.content_no) as reportCount
       from 
           report r
       join 
           users reporter on r.reporter_no = reporter.user_no
       join 
           users violator on r.violator_no = violator.user_no
       where 
           (r.report_category, r.content_no) IN (
               select report_category, content_no 
               from report 
               group by report_category, content_no 
               having count(*) >= 2
           )
       <if test="keyword != null and keyword != ''">
           and reporter.nickname like '%' || #{keyword} || '%'
       </if>
       order by
       <choose>
           <when test="order == 'old'">r.create_date asc</when>
           <otherwise>r.create_date desc</otherwise>
       </choose>
   </select>
    
    
    
    <!-- update report set report_status = #{reportStatus} where report_no = #{reportNo} -->
	<!-- v  = review, c = comm, r = reply 
		A : accept,  W : wait , R : reject -->
	<update id="updateStatus">
		update report set report_status = #{reportStatus} where report_no = #{reportNo}
	</update>
	
	 <update id="updateMember">
    	update users
    	set status = #{status}
    	where user_no = #{userNo}
    </update>
	
	<select id="getCommNo" resultType="int">
		select content_no
        from report
        where report_no = #{reportNo}
        and report_category = 'C'
	</select>
	
	<select id="getReplyNo" resultType="int">
        select content_no
        from report
        where report_no = #{reportNo}
        and report_category = 'R'
    </select>
	
	<update id="deleteCommReport">
		update comm
		set status = 'N'
		where comm_no = #{commNo}
	</update>
	
	<update id="deleteReplyReport">
        update reply
        set status = 'N'
        where reply_no = #{replyNo}
    </update>
	
	
	<!-- 댓글이 속한 게시글 번호 조회 -->
	<select id="getCommNoByReplyNo" resultType="int">
	    select comm_no
	    from reply
	    where reply_no = #{replyNo}
	</select>
	
<select id="selectRecent" resultType = "Notice">
	<![CDATA[
	select *
	from (
		select *
		from notice
		where status = 'Y'
		order by is_important desc, create_date desc
		)
		where rownum <= 3
		]]>
	</select>


	
<select id="userCount" resultType="DashBoard">
		SELECT TRUNC(visit_date) as visit_date, COUNT(*) as count
		FROM logs		
		GROUP BY TRUNC(visit_date)
		ORDER BY TRUNC(visit_date) DESC
	</select>
	
	<select id="dailyUserCount" resultType="DashBoard">
		SELECT TO_CHAR(visit_date, 'DY', 'NLS_DATE_LANGUAGE=KOREAN') AS week_day_name,
       COUNT(*) AS count
FROM logs
WHERE visit_date BETWEEN TRUNC(SYSDATE, 'IW') 
                    AND TRUNC(SYSDATE, 'IW') + 6  
GROUP BY TO_CHAR(visit_date, 'DY', 'NLS_DATE_LANGUAGE=KOREAN'), 
         TO_CHAR(visit_date, 'D')  
ORDER BY DECODE(TO_CHAR(visit_date, 'D'), 
                '2', 1, '3', 2, '4', 3, '5', 4, '6', 5, '7', 6, '1', 7)
		
	</select>	
	
	
</mapper>